# layout 'name':
#   x, y, width, height, column, row;
#
# Values are percentage, and number of columns/rows.
# The name field is used to set the layout variable (see below), do not use
# whitespaces.
# Each line represents the window index, i.e. first line, first window.
# The information is separated with semicolon, the part to be used depends upon
# the window index and the total number of windows.
# The first part, of the first line is used when there is only one window, if a
# second one is created, the second part is used to arrange the first window.
# The second part part of the second line is used on the second window when
# there is three windows. (i.e. total - current + 1)
# If the number exceeds, the last one is used.
# To automatically arrange the exceeded windows, one must provide the column
# and row numbers, only at the last line, otherwise it will have no effect.
# If the number is zero, the row/column number is choosed dynamically,
# otherwise, it uses the provide number.
# Just be sure to not define a number on both fields, as it is impossible to
# create, for example, a grid with 2x2 using 1 or 10 windows.
layout 'right-stack':
    0, 0, 100, 100; 0, 0, 50, 100;
    50, 0, 50, 100, 1, 0;
layout 'bottom-stack':
    0, 0, 100, 100; 0, 0, 100, 50;
    0, 50, 100, 50, 0, 1;
layout 'grid':
    0, 0, 100, 100, 0, 0;
layout 'h-tile':
    0, 0, 100, 100, 1, 0;
layout 'v-tile':
    0, 0, 100, 100, 0, 1;
layout 'fullscreen':
    0, 0, 100, 100;
# variable = value
#
# Ewmh atoms that should be treated as sink and float.
# Sink window is any window that should not be managed, nor have borders etc.
# As the name imply, it stays at the bottom, covered by every other window.
# Pagers, panels, bars, desktop programs should be treated as sink.
# Float window is the opposite, it stays on top, covering normal and sink
# windows, and it does not arrange using the layout, but is rather managed
# using the mouse, by the user (it is also possible with keyboard, of course),
# float window is the common window type in most of window managers.
# Popup, splash, fixed-size window should be treated as float window.
# Everything else is normal.
sinks = 'DESKTOP,DOCK,STICKY,HIDDEN'
floats = 'TOOLBAR,MENU,UTILITY,SPLASH,DIALOG,MODAL'
# border color around focused, unfocused and urgent windows
border_in = '#00F000'
border_out = '#404040'
border_urgent = '#F00000'
layout = 'right-stack' # default layout
tags = 4 # maximum number of tags
# gap between window and around the screen (pixel)
gap_win = 2
gap_top = 0
gap_left = 0
gap_right = 0
gap_bottom = 0
border_width = 1
# Which window should receive focus when create window and destroy current
# negative value focus previous, positive focus next, the number set the nth
# prev/next window.
focus = +1
newwin = +1
follow_mouse = 1 # focus follow the mouse? 1 is true, 0 is false.
follow_mod = <M1-M4> # with what modifier key? <0> means no mod
# <M1-M4-M5-S-C-key> function = arg1, arg2
# M1 = Alt, M4 = Super, M5 = Altgr, S = Shift, C = Ctrl
<M4-q> quit = 0 # 0 means EXIT_SUCCESS
<M4-S-q> quit = 1 # 1 means EXIT_FAILURE
<M1-q> restart # re-read the resource file
<M4-w> close = CURRENT
<M4-S-w> close = ALL
<M1-w> close = ALLELSE # every window except the current one
<M4-e> toggle # toggle between NORMAL and FLOAT on current
<M4-r> spawn = 'dmenu_run'
<M4-t> spawn = 'urxvt'
<M4-Print> spawn = 'scrot "%Y%m%d %Hh%Mm%Ss.png" -q100' # double quote works
# Set variable value, cycling through it. Value is separated with spaces, if
# the current value is matched, the next will be used to set.
# E.g. 'gap_top', '0 12', when the current gap is 0, set to 12,
# when current is 12, set to 0.
<M4-a> set = 'gap_top', '0 12'
<M4-s> set = 'gap_win', '2 12'
<M4-y> set = 'layout', 'right-stack'
<M4-u> set = 'layout', 'bottom-stack'
<M4-i> set = 'layout', 'grid'
<M4-o> set = 'layout', 'h-tile'
<M4-p> set = 'layout', 'v-tile'
<M1-p> set = 'layout', 'right-stack bottom-stack grid h-tile v-tile fullscreen'
# macro execute the keys, just be sure to copy the value exactly as you wrote.
<M4-C-Tab> set = 'layout', 'fullscreen right-stack'
<M4-S-Tab> set = 'border_width', '0 1'
<M4-C-S-Tab> set = 'gap_win', '0 2'
<M4-Tab> macro = '<M4-C-Tab> <M4-S-Tab> <M4-C-S-Tab>'
# focus NORMAL/FLOAT/URGENT/INPUT windows
<M4-h> focus = NORMAL, -777
<M4-j> focus = NORMAL, -1
<M4-k> focus = NORMAL, +1
<M4-l> focus = NORMAL, +777
<M4-semicolon> focus = URGENT, +1
<M4-S-semicolon> focus = URGENT, -1
<M1-h> focus = FLOAT, -777
<M1-j> focus = FLOAT, -1
<M1-k> focus = FLOAT, +1
<M1-l> focus = FLOAT, +777
# input is any window that accept focus, both normal and float
<M1-M4-h> focus = INPUT, -777
<M1-M4-j> focus = INPUT, -1
<M1-M4-k> focus = INPUT, +1
<M1-M4-l> focus = INPUT, +777
# switch position on normal windows
<M4-S-h> switch = -777
<M4-S-j> switch = -1
<M4-S-k> switch = +1
<M4-S-l> switch = +777
# move float windows. width, height (percent)
<M1-C-h> move = -1, 0
<M1-C-j> move = 0, +1
<M1-C-k> move = 0, -1
<M1-C-l> move = +1, 0
# Resize both normal and float. width, height (percent)
# Note: the resize is applied to current state of current layout, if one wants
# to reset to default, one must restart the mantis-wm.
<M4-C-h> resize = -1, 0
<M4-C-j> resize = 0, +1
<M4-C-k> resize = 0, -1
<M4-C-l> resize = +1, 0
# Select tags and change tag of current window.
# One can select multiple tags at once, pressing the desired keys at same time.
<M4-n> tag = SELECT, 1
<M1-n> tag = CHANGE, 1
<M4-m> tag = SELECT, 2
<M1-m> tag = CHANGE, 2
<M4-comma> tag = SELECT, 3
<M1-comma> tag = CHANGE, 3
<M4-period> tag = SELECT, 4
<M1-period> tag = CHANGE, 4
<M4-slash> tag = SELECT, 0 # 0 means all tags
<M1-slash> tag = CHANGE, 0
# Accepted signals: SIGTERM, SIGKILL, SIGCONT, SIGSTOP.
<M1-c> kill = SIGTERM
<M1-S-c> kill = SIGKILL
<M4-c> kill = SIGCONT
<M4-S-c> kill = SIGSTOP
# Mouse: Button1 = left, Button2 = middle, Button3 = right.
<M4-Button1> FOCUS
<M4-Button3> CLOSE
<M1-Button1> RESIZE
<M1-Button3> TOGGLE
<M1-M4-Button1> MOVE
